/*!
    Copyright 2016 Broija

    This file is part of subdetection library.

    subdetection is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    subdetection is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with subdetection library.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef SUBDETECTION_MACROS_BIT_FLAG_ENUM_H
#define SUBDETECTION_MACROS_BIT_FLAG_ENUM_H

#include "macros/basics.h"
#include "macros/bitwise_op.h"
#include "macros/subtract.h"

/* ++++++++++++++++++++++++++++++++++++
 *            ENUM MACROS
 * ++++++++++++++++++++++++++++++++++++*/

/*! Declares an enum and all its members (1st member is assigned to least significant bit).
 *  The underlying type will be the best fitting unsigned integer type.*/
#define DECLARE_BIT_FLAG_ENUM(_ENUM,...) \
    enum _ENUM : BestIntegerBitSizeSelector<VA_ARG_NUMBER(__VA_ARGS__),false>::Type { \
      DECLARE_BIT_FLAG_ENUM_MEMBER(__VA_ARGS__) \
    };

/*! Declares an enum and all its members (1st member is assigned to least significant bit).
 *  The underlying type will be the best fitting unsigned integer type.*/
#define DECLARE_BIT_FLAG_ENUM_CLASS(_ENUM,...) \
    enum class _ENUM : BestIntegerBitSizeSelector<VA_ARG_NUMBER(__VA_ARGS__),false>::Type { \
      DECLARE_BIT_FLAG_ENUM_MEMBER(__VA_ARGS__) \
    };

 /*! Declares an enum and all its members. The underlying type will be the best fitting unsigned integer type.*/
#define DECLARE_BIT_FLAG_ENUM_1ST_IS_MSB(_ENUM,...) \
    enum _ENUM : BestIntegerBitSizeSelector<VA_ARG_NUMBER(__VA_ARGS__),false>::Type { \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB(__VA_ARGS__) \
    };

/*! Declares an enum and all its members. The underlying type will be the best fitting unsigned integer type.*/
#define DECLARE_BIT_FLAG_ENUM_CLASS_1ST_IS_MSB(_ENUM,...) \
    enum class _ENUM : BestIntegerBitSizeSelector<VA_ARG_NUMBER(__VA_ARGS__),false>::Type { \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB(__VA_ARGS__) \
    };

//-------------------------------------------------------------------------------------------------
//----------------------------DECLARE_BIT_FLAG_ENUM helpers----------------------------------------------
//-------------------------------------------------------------------------------------------------

/*! Bit flag enum value declarations.
 *  First enum member is assigned to least significant bit.*/
/* -- 8bit enums -- */
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1(_ENUM_NB,_MEMBER) \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,1))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_2(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,2))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_3(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_2(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,3))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_4(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_3(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,4))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_5(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_4(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,5))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_6(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_5(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,6))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_7(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_6(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,7))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_8(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_7(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,8))
/* -- 16bit enums -- */
#define DECLARE_BIT_FLAG_ENUM_MEMBER_9(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_8(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,9))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_10(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_9(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,10))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_11(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_10(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,11))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_12(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_11(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,12))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_13(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_12(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,13))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_14(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_13(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,14))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_15(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_14(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,15))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_16(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_15(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,16))
/* -- 32bit enums -- */
#define DECLARE_BIT_FLAG_ENUM_MEMBER_17(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_16(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,17))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_18(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_17(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,18))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_19(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_18(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,19))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_20(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_19(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,20))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_21(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_20(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,21))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_22(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_21(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,22))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_23(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_22(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,23))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_24(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_23(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,24))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_25(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_24(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,25))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_26(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_25(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,26))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_27(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_26(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,27))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_28(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_27(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,28))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_29(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_28(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,29))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_30(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_29(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,30))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_31(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_30(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,31))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_32(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_31(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,32))
/* -- 64bit enums -- */
#define DECLARE_BIT_FLAG_ENUM_MEMBER_33(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_32(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,33))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_34(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_33(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,34))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_35(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_34(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,35))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_36(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_35(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,36))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_37(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_36(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,37))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_38(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_37(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,38))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_39(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_38(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,39))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_40(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_39(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,40))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_41(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_40(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,41))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_42(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_41(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,42))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_43(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_42(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,43))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_44(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_43(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,44))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_45(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_44(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,45))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_46(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_45(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,46))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_47(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_46(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,47))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_48(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_47(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,48))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_49(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_48(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,49))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_50(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_49(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,50))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_51(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_50(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,51))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_52(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_51(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,52))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_53(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_52(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,53))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_54(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_53(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,54))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_55(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_54(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,55))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_56(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_55(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,56))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_57(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_56(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,57))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_58(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_57(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,58))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_59(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_58(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,59))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_60(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_59(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,60))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_61(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_60(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,61))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_62(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_61(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,52))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_63(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_62(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = LEFT_SHIFT_1(SUBTRACT(_ENUM_NB,63))
#define DECLARE_BIT_FLAG_ENUM_MEMBER_64(_ENUM_NB,_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_63(_ENUM_NB,__VA_ARGS__), \
    _MEMBER = 1//If this macro is called, _MEMBER value will always be 1 as it's the maximum number of bits.

#define DECLARE_BIT_FLAG_ENUM_MEMBER_(_ENUM_NB,...) BASIC_CONCAT(DECLARE_BIT_FLAG_ENUM_MEMBER_,_ENUM_NB)(_ENUM_NB,__VA_ARGS__)
#define DECLARE_BIT_FLAG_ENUM_MEMBER(...) DECLARE_BIT_FLAG_ENUM_MEMBER_(VA_ARG_NUMBER(__VA_ARGS__),__VA_ARGS__)

//------------------------------------------------------------------------------
//---------------------DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB helpers----------------
//------------------------------------------------------------------------------

/*! Bit flag enum value declarations.
 *  First enum member is assigned to most significant bit.*/
/* -- 8bit enums -- */
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_1(_MEMBER) \
    _MEMBER = 0x01
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_2(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_1(__VA_ARGS__), \
    _MEMBER = 0x02
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_3(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_2(__VA_ARGS__), \
    _MEMBER = 0x04
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_4(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_3(__VA_ARGS__), \
    _MEMBER = 0x08
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_5(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_4(__VA_ARGS__), \
    _MEMBER = 0x10
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_6(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_5(__VA_ARGS__), \
    _MEMBER = 0x20
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_7(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_6(__VA_ARGS__), \
    _MEMBER = 0x40
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_8(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_7(__VA_ARGS__), \
    _MEMBER = 0x80
/* -- 16bit enums -- */
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_9(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_8(__VA_ARGS__), \
    _MEMBER = 0x0100
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_10(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_9(__VA_ARGS__), \
    _MEMBER = 0x0200
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_11(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_10(__VA_ARGS__), \
    _MEMBER = 0x0400
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_12(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_11(__VA_ARGS__), \
    _MEMBER = 0x0800
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_13(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_12(__VA_ARGS__), \
    _MEMBER = 0x1000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_14(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_13(__VA_ARGS__), \
    _MEMBER = 0x2000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_15(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_14(__VA_ARGS__), \
    _MEMBER = 0x4000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_16(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_15(__VA_ARGS__), \
    _MEMBER = 0x8000
/* -- 32bit enums -- */
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_17(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_16(__VA_ARGS__), \
    _MEMBER = 0x010000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_18(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_17(__VA_ARGS__), \
    _MEMBER = 0x020000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_19(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_18(__VA_ARGS__), \
    _MEMBER = 0x040000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_20(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_19(__VA_ARGS__), \
    _MEMBER = 0x080000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_21(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_20(__VA_ARGS__), \
    _MEMBER = 0x100000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_22(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_21(__VA_ARGS__), \
    _MEMBER = 0x200000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_23(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_22(__VA_ARGS__), \
    _MEMBER = 0x400000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_24(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_23(__VA_ARGS__), \
    _MEMBER = 0x800000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_25(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_24(__VA_ARGS__), \
    _MEMBER = 0x01000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_26(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_25(__VA_ARGS__), \
    _MEMBER = 0x02000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_27(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_26(__VA_ARGS__), \
    _MEMBER = 0x04000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_28(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_27(__VA_ARGS__), \
    _MEMBER = 0x08000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_29(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_28(__VA_ARGS__), \
    _MEMBER = 0x10000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_30(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_29(__VA_ARGS__), \
    _MEMBER = 0x20000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_31(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_30(__VA_ARGS__), \
    _MEMBER = 0x40000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_32(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_31(__VA_ARGS__), \
    _MEMBER = 0x80000000
/* -- 64bit enums -- */
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_33(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_32(__VA_ARGS__), \
    _MEMBER = 0x0100000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_34(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_33(__VA_ARGS__), \
    _MEMBER = 0x0200000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_35(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_34(__VA_ARGS__), \
    _MEMBER = 0x0400000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_36(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_35(__VA_ARGS__), \
    _MEMBER = 0x0800000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_37(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_36(__VA_ARGS__), \
    _MEMBER = 0x1000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_38(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_37(__VA_ARGS__), \
    _MEMBER = 0x2000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_39(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_38(__VA_ARGS__), \
    _MEMBER = 0x4000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_40(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_39(__VA_ARGS__), \
    _MEMBER = 0x8000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_41(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_40(__VA_ARGS__), \
    _MEMBER = 0x010000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_42(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_41(__VA_ARGS__), \
    _MEMBER = 0x020000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_43(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_42(__VA_ARGS__), \
    _MEMBER = 0x040000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_44(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_43(__VA_ARGS__), \
    _MEMBER = 0x080000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_45(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_44(__VA_ARGS__), \
    _MEMBER = 0x100000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_46(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_45(__VA_ARGS__), \
    _MEMBER = 0x200000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_47(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_46(__VA_ARGS__), \
    _MEMBER = 0x400000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_48(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_47(__VA_ARGS__), \
    _MEMBER = 0x800000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_49(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_48(__VA_ARGS__), \
    _MEMBER = 0x01000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_50(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_49(__VA_ARGS__), \
    _MEMBER = 0x02000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_51(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_50(__VA_ARGS__), \
    _MEMBER = 0x04000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_52(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_51(__VA_ARGS__), \
    _MEMBER = 0x08000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_53(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_52(__VA_ARGS__), \
    _MEMBER = 0x10000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_54(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_53(__VA_ARGS__), \
    _MEMBER = 0x20000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_55(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_54(__VA_ARGS__), \
    _MEMBER = 0x40000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_56(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_55(__VA_ARGS__), \
    _MEMBER = 0x80000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_57(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_56(__VA_ARGS__), \
    _MEMBER = 0x0100000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_58(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_57(__VA_ARGS__), \
    _MEMBER = 0x0200000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_59(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_58(__VA_ARGS__), \
    _MEMBER = 0x0400000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_60(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_59(__VA_ARGS__), \
    _MEMBER = 0x0800000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_61(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_60(__VA_ARGS__), \
    _MEMBER = 0x1000000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_62(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_61(__VA_ARGS__), \
    _MEMBER = 0x2000000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_63(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_62(__VA_ARGS__), \
    _MEMBER = 0x4000000000000000
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_64(_MEMBER,...) \
    DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_63(__VA_ARGS__), \
    _MEMBER = 0x8000000000000000

#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_(_ENUM_NB,...) BASIC_CONCAT(DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_,_ENUM_NB)(__VA_ARGS__)
#define DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB(...) DECLARE_BIT_FLAG_ENUM_MEMBER_1ST_IS_MSB_(VA_ARG_NUMBER(__VA_ARGS__),__VA_ARGS__)

#endif // SUBDETECTION_MACROS_BIT_FLAG_ENUM_H
